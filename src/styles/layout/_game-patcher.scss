/**
* Game Patcher Styles
* 
* Styles for the game patcher interface and elements.
*/

@use '../abstracts' as *;
@use '../base/animations' as *;

.game-patcher {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-size: cover;  
  background-position: center;
  background-repeat: no-repeat;
  
  // Specific game background
  &.dbo {
    background-image: url("@assets/bg-dbo.svg");
  }
  
  // Active state
  &.active {
    display: block;
    @include fade-in(0.5s);
  }
  
  // Game logo
  .game-logo {
    position: absolute;
    top: var(--spacing-xl);
    left: var(--spacing-xl);
    max-width: 200px;
    height: auto;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.5));
  }

  // Text elements
  .text {
    display: block;
    color: var(--text-color);
    font-family: var(--font-family);
    font-size: var(--font-size-sm);
    position: absolute;
    text-align: left;
    pointer-events: none;
    z-index: 2;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  }

  .txt {
    &-status {
      bottom: 78px;
      left: 40px;
      font-size: var(--font-size-md);
      font-weight: 500;
      color: var(--primary-color);
    }
    
    // Optional download info text below the button
    &-download-info {
      top: 6em;
      left: 3em;
      font-size: var(--font-size-sm);
      opacity: 0.8;
    }
  }

  // Play button with integrated progress
  .btn-start {
    @include button-primary;
    border-radius: var(--border-radius-md);
    line-height: 50px;
    font-weight: 600;
    font-size: var(--font-size-lg);
    min-width: 200px;
    position: absolute;
    top: 2em;
    left: 3em;
    z-index: 2;
    
    // Add gradient overlay for more appeal
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom, 
                rgba(255, 255, 255, 0.1) 0%, 
                rgba(255, 255, 255, 0) 100%);
      pointer-events: none;
      border-radius: var(--border-radius-md);
    }
    
    &:hover:not(:disabled):not(.disabled) {
      transform: translateY(-2px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }
    
    &:active:not(:disabled):not(.disabled) {
      transform: translateY(0);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }
    
    &:disabled {
      cursor: not-allowed;
      opacity: 0.9;
    }
    
    // Updating state with special styling
    &.updating {
      background: linear-gradient(to right, var(--primary-color) 0%, var(--primary-color-hover) 100%);
      position: relative;
      overflow: hidden;
      
      // Animated shine effect for updating state
      &::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 50%;
        height: 100%;
        background: linear-gradient(
          to right, 
          rgba(255, 255, 255, 0) 0%,
          rgba(255, 255, 255, 0.3) 50%,
          rgba(255, 255, 255, 0) 100%
        );
        animation: shine 2s infinite;
      }
    }
    
    // Disabled state
    &.disabled {
      background-color: var(--secondary-color);
      color: var(--text-on-secondary);
      opacity: 0.7;
      cursor: not-allowed;
      z-index: 1;
      
      &:hover {
        transform: none;
        box-shadow: none;
      }
    }
    
    // Ready to play state
    &.ready {
      animation: pulse 2s infinite;
    }
  }
}

// Shine animation for progress effect
@keyframes shine {
  0% { left: -100%; }
  100% { left: 200%; }
}